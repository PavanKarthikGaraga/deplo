services:
  # Spring Boot Backend
  backend:
    build:
      context: ../Arbeit-cicd/springboot-backend
      dockerfile: Dockerfile
    container_name: arbeit-backend
    restart: unless-stopped
    ports:
      - "9090:9090"
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: mysql://database-1.cwhooqg6a570.us-east-1.rds.amazonaws.com:3306/arbeit
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: adminadmin
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      
      # JPA Configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "false"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQL8Dialect

      # Server Configuration
      SERVER_PORT: 9090

      # File Upload Configuration
      SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: 10MB
      SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE: 10MB

      # CORS Configuration (adjust origins as needed)
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://frontend:3000,http://13.221.25.150:3000

      # JWT Configuration (use secure secret in production)
      JWT_SECRET: your-256-bit-secret-key-here-change-this-in-production
      JWT_EXPIRATION: 86400000

      # Profile
      SPRING_PROFILES_ACTIVE: docker
    volumes:
      - uploads_data:/app/uploads
    networks:
      - arbeit-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Next.js Frontend
  frontend:
    build:
      context: ../Arbeit-cicd/my-app
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://13.221.25.150:9090/api
    container_name: arbeit-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      # API Configuration
      NEXT_PUBLIC_API_URL: http://13.221.25.150:9090/api
    networks:
      - arbeit-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  arbeit-network:
    driver: bridge

volumes:
  uploads_data:
    driver: local