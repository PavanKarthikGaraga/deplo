name: Deploy Arbeit Fullstack App on EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:   # allow manual run from GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Step 2: Debug - list files in repo
      - name: List repo files
        run: ls -R

      # Step 3: Copy files to EC2 inside ~/arbeit-deployment
      - name: Copy repo to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu   # or ubuntu if Ubuntu server
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: /home/ubuntu/arbeit-deployment


      # Step 4: SSH into EC2 and deploy with Docker Compose
      - name: Deploy on EC2 with Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu    # âœ…Ubuntu user
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          debug: true
          script: |

            cd ~/arbeit-deployment

            # Install Git if missing
            if ! command -v git &> /dev/null; then
            echo "Installing Git..."
            sudo apt-get update -y
            sudo apt-get install -y git
            fi

            # Install Docker and Docker Compose if missing
            if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            sudo apt-get update -y
            sudo apt-get install -y ca-certificates curl gnupg lsb-release

            sudo mkdir -p /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

            echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

            sudo apt-get update -y
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

            sudo systemctl enable docker
            sudo systemctl start docker
            fi

            # Verify Docker Compose is available
            if ! docker compose version &> /dev/null; then
              echo "Installing Docker Compose plugin..."
              sudo apt-get update -y
              sudo apt-get install -y docker-compose-plugin
            fi

            echo "Docker version: $(docker --version)"
            echo "Docker Compose version: $(docker compose version)"

            # Configure Docker for public registry access
            echo "Configuring Docker..."

            # Create Docker config directory if it doesn't exist
            sudo mkdir -p /root/.docker

            script: |
              # Simple Docker deployment with authentication fix
              echo "Starting deployment..."

              # Fix Docker Hub authentication issue
              sudo docker logout || true

              # Check if images are already available locally
              if ! sudo docker images | grep -q nginx; then
                echo "Pulling nginx image..."
                sudo docker pull nginx:alpine || echo "nginx pull failed, continuing..."
              fi

              # Verify docker-compose.yml exists
              if [ ! -f "docker-compose.yml" ]; then
                echo "ERROR: docker-compose.yml not found!"
                exit 1
              fi

              # Stop existing containers
              sudo docker compose down || echo "No existing containers to stop"

              # Clean up and deploy
              sudo docker system prune -f || true
              sudo docker compose up -d --build

              echo "Deployment completed!"
              sudo docker compose ps





